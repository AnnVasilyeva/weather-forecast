{"version":3,"sources":["components/Header.js","components/ForecastEmptyMes.js","service/Api.js","components/CityItem.js","components/SelectCity.js","components/WeatherCard.js","components/ErrorMessage.js","components/WeatherList.js","components/SelectDay.js","components/ForecastForDay.js","components/ForecastCard.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","ForecastEmptyMes","ApiBase","getResource","url","a","fetch","_apiBase","res","ok","Error","json","getWeekWeather","lat","lon","apiKey","getDayWeather","dt","console","log","Date","parse","getDay","unix_timestamp","date","day","getDate","month","getMonth","year","getFullYear","this","data","name","id","CityItem","item","onClick","SelectCity","weekSelected","weekForecast","citySelected","errorMessage","apiBase","useState","inputValue","setInputValue","listOpen","setListOpen","onItemClick","selectItem","find","then","catch","error","getDayForecast","items","map","index","type","placeholder","autoComplete","value","WeatherCard","isDay","icon","temp","src","alt","ErrorMessage","errorMes","WeatherList","forecastList","i","setI","itemDay","slice","newItem","Math","floor","weather","itemTransform","length","SelectDay","daySelected","getTransformDate","d","max_d","setDate","min_d","onChange","e","target","max","min","ForecastForDay","dayForecast","isEmpty","setDay","city","setCity","useEffect","handleSubmit","current","inputDate","setInputDate","newCity","ForecastCard","isSelect","setIsSelect","setForecastList","setIsDay","setErrorMes","message","daily","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAAe,SAASA,IACpB,OACI,iCACI,qBAAIC,UAAU,qBAAd,UACA,sBAAMA,UAAU,wBAAhB,qBACA,sBAAMA,UAAU,0BAAhB,2B,mBCLG,SAASC,IACpB,OACI,qBAAKD,UAAU,yBAAf,SACI,qBAAKA,UAAU,yBAAf,wE,mCCDSE,EACjB,aAAgB,IAAD,gCAwCfC,YAxCe,uCAwCD,WAAOC,GAAP,eAAAC,EAAA,sEACQC,MAAM,GAAD,OAAI,EAAKC,UAAT,OAAoBH,IADjC,WACJI,EADI,QAGFC,GAHE,sBAIA,IAAIC,MAAM,wBAJV,uBAMGF,EAAIG,OANP,mFAxCC,2DAkDfC,eAlDe,uCAkDE,iCAAAP,EAAA,6DAAQQ,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IAAb,SACK,EAAKX,YAAL,eAAyBU,EAAzB,gBAAoCC,EAApC,6DAA4F,EAAKC,SADtG,cACPP,EADO,yBAENA,GAFM,2CAlDF,2DAwDfQ,cAxDe,uCAwDC,mCAAAX,EAAA,6DAAQQ,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IAAKG,EAAlB,EAAkBA,GAChCC,QAAQC,IAAIN,EAAKC,EAAKG,GADR,SAEI,EAAKd,YAAL,2BAAqCU,EAArC,gBAAgDC,EAAhD,eAA0DM,KAAKC,MAAMJ,GAArE,kBAAkF,EAAKF,SAF3F,cAERP,EAFQ,yBAGPA,GAHO,2CAxDD,2DA+Dfc,OAAS,SAACC,GACR,IACMC,EAAO,IAAIJ,KAAsB,IAAjBG,GAChBE,EAAMD,EAAKE,UACXC,EAAQH,EAAKI,WACbC,EAAOL,EAAKM,cAElB,MAAM,GAAN,OAAUL,EAAM,GAAKA,EAAM,IAAMA,EAAjC,YANU,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAMnCE,GAA1C,YAAoDE,IArElDE,KAAKC,KAAO,CACR,CACEC,KAAM,SACNpB,IAAK,YACLC,IAAK,YACLoB,GAAI,GAEN,CACED,KAAM,WACNpB,IAAK,YACLC,IAAK,YACLoB,GAAI,GAEN,CACED,KAAM,UACNpB,IAAK,YACLC,IAAK,YACLoB,GAAI,GAEN,CACED,KAAM,QACNpB,IAAK,YACLC,IAAK,YACLoB,GAAI,GAEN,CACED,KAAM,YACNpB,IAAK,YACLC,IAAK,YACLoB,GAAI,IAIRH,KAAKxB,SAAW,kDAChBwB,KAAKhB,OAAS,oCCpCT,SAASoB,EAAT,GAAqC,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,QACrC,OACI,oBAAIrC,UAAU,6BACVqC,QAAS,kBAAMA,EAAQD,EAAKF,KADhC,SAESE,EAAKH,OCFP,SAASK,EAAT,GAAgF,IAA1DC,EAAyD,EAAzDA,aAAcC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,aACrEC,EAAU,IAAIzC,EAEd8B,EAAOW,EAAQX,KAHqE,EAKtDY,mBAAS,IAL6C,mBAKnFC,EALmF,KAKvEC,EALuE,OAM1DF,oBAAS,GANiD,mBAMnFG,EANmF,KAMzEC,EANyE,KAQpFC,EAAc,SAACf,GACjB,IAAMgB,EAAalB,EAAKmB,MAAK,SAAAf,GAAI,OAAIA,EAAKF,KAAOA,KAEjD,GAAGgB,EAGC,OAFAJ,GAAc,kBAAMI,EAAWjB,QAC/Be,GAAY,kBAAM,KACXL,EAAQ/B,eAAesC,GACjBE,MAAK,SAAAhB,GAAI,OAAIG,EAAaH,MAC1BiB,OAAM,SAACC,GAAD,OAAWZ,EAAaY,OAK7CC,EAAiB,SAACrB,GACpB,IAAMgB,EAAalB,EAAKmB,MAAK,SAAAf,GAAI,OAAIA,EAAKF,KAAOA,KAE9CgB,IACCJ,GAAc,kBAAMI,EAAWjB,QAC/Be,GAAY,kBAAM,KAClBP,EAAaS,KAOfM,EAAQxB,EAAKyB,KAAI,SAACrB,EAAMsB,GAC1B,OAAO,cAACvB,EAAD,CAAsBC,KAAMA,EAAMC,QAASG,EAAeS,EAAcM,GAAzDG,MAG1B,OACI,sBAAK1D,UAAU,sBAAf,UAEI,uBAAO2D,KAAK,OACJC,YAAY,cACZC,aAAa,MACb7D,UAAU,uCACViC,KAAK,OACL6B,MAAOjB,EACPR,QAAS,kBAAMW,GAAaD,MAInCA,GACD,oBAAI/C,UAAU,+BAAd,SACKwD,OCvDF,SAASO,EAAT,GAAsC,IAAf3B,EAAc,EAAdA,KAAM4B,EAAQ,EAARA,MAClCxC,EAAoBY,EAApBZ,KAAMyC,EAAc7B,EAAd6B,KAAMC,EAAQ9B,EAAR8B,KAGlB,OAEI,qBAAIlE,UAAWgE,EAJF,oBAIsB,qBAAnC,UACI,qBAAKhE,UAAU,yBAAf,SAAyCwB,IACzC,qBAAKxB,UAAU,0BAAf,SACI,qBAAKmE,IAAKF,EAAMG,IAAI,mBAExB,qBAAKpE,UAAU,0BAAf,SAA0CkE,EAAO,EAAP,WAAeA,EAAf,mBAA6BA,EAA7B,aCbvC,SAASG,EAAT,GAAoC,IAAZC,EAAW,EAAXA,SACnC,OACI,qBAAKtE,UAAU,gBAAf,SAAgCsE,ICIzB,SAASC,EAAT,GAAwD,IAAjCC,EAAgC,EAAhCA,aAAcF,EAAkB,EAAlBA,SAAUN,EAAQ,EAARA,MAAQ,EAEhDpB,mBAAS,GAFuC,mBAE3D6B,EAF2D,KAExDC,EAFwD,KAG5D/B,EAAU,IAAIzC,EA0BdyE,EAAUH,EAAaf,KAAI,SAACrB,GAC9B,OAAO,cAAC2B,EAAD,CAA2B3B,KAAMA,EAAM4B,MAAOA,GAA5B5B,EAAKnB,OAG5BuC,EAAQgB,EAAaI,MAAMH,EAAGA,EAAI,GAAGhB,KAAI,SAACrB,GAC5C,IAAMyC,EA5BY,SAACzC,GAMnB,MAAO,CACHZ,KALSmB,EAAQrB,OAAOc,EAAKnB,IAM7BiD,KALSY,KAAKC,MAAM3C,EAAK8B,KAAKzC,KAM9BwC,KALM,2CAAuC7B,EAAK4C,QAAQ,GAAGf,KAAvD,YAwBMgB,CAAc7C,GAC9B,OAAO,cAAC2B,EAAD,CAA2B3B,KAAMyC,EAASb,MAAOA,GAA/B5B,EAAKnB,OAGlC,OACI,qBAAKjB,UAAU,6BAAf,SACKsE,EAAW,cAACD,EAAD,CAAcC,SAAUA,IAChC,qCACA,wBAAQX,KAAK,SAAS3D,UAAU,kCAAkCqC,QAAS,WArBzEqC,EAAJ,IAAND,EAAeA,EAAUA,EAAI,MAsBrB,oBAAIzE,UAAU,qBAAd,SACKgE,EAAQW,EAAUnB,IAEvB,wBAAQG,KAAK,SAAS3D,UAAU,kCAAkCqC,QAAS,WApBnFoC,IAAMD,EAAaI,MAAMH,EAAGA,EAAI,GAAGS,OAAS,EAAIR,EAAKD,GAAKC,EAAKD,EAAI,W,WC9B5D,SAASU,EAAT,GAA2C,IAAtBC,EAAqB,EAArBA,YAAatB,EAAQ,EAARA,MAGzCuB,EAAmB,SAAC9D,GACxB,IAAMC,EAAO,IAAIJ,KAAKG,GACdE,EAAMD,EAAKE,UACXC,EAAQH,EAAKI,WAAa,EAC1BC,EAAOL,EAAKM,cAElB,MAAM,GAAN,OAAUD,EAAV,YAAkBF,EAAQ,GAAKA,EAAQ,IAAMA,EAA7C,YAAsDF,EAAM,GAAKA,EAAM,IAAMA,EAA7E,MAGE6D,EAAI,IAAIlE,KAERmE,EAAQF,EAAiBC,EAAEE,QAAQF,EAAE5D,UAAY,IACjD+D,EAAQJ,EAAiBC,EAAEE,QAAQF,EAAE5D,UAAY,IAEvD,OAEI,uBAAOiC,KAAK,OACN+B,SAAU,SAACC,GAAD,OAAOP,EAAYO,EAAEC,OAAO9B,QACtC9D,UAAU,6CACV8D,MAAOA,EACP7B,KAAK,OACL2B,YAAY,cACZiC,IAAKN,EACLO,IAAKL,ICvBF,SAASM,EAAT,GAAqE,IAA3CvD,EAA0C,EAA1CA,aAAcwD,EAA4B,EAA5BA,YAAatD,EAAe,EAAfA,aAC1DC,EAAU,IAAIzC,EAD2D,EAGzD0C,mBAAS,CAAC3B,GAAI,GAAIgF,SAAS,IAH8B,mBAGxExE,EAHwE,KAGnEyE,EAHmE,OAIvDtD,mBAAS,CAAC/B,IAAK,GAAIC,IAAK,GAAImF,SAAS,IAJkB,mBAIxEE,EAJwE,KAIlEC,EAJkE,KAM/EC,qBAAU,WACF5E,EAAIwE,SAAYE,EAAKF,SACrBK,OAIR,IAYMA,EAAe,WAEjB3D,EAAQ3B,cAAR,2BAA0BmF,GAAS1E,IAC9B2B,MAAK,SAAChB,GAAD,OAAU4D,EAAY,CAACxE,KAAMmB,EAAQrB,OAAOc,EAAKmE,QAAQtF,IAC3CgD,KAAK,oCAAD,OAAsC7B,EAAKmE,QAAQvB,QAAQ,GAAGf,KAA9D,WACJC,KAAMY,KAAKC,MAAM3C,EAAKmE,QAAQrC,WAEjDb,OAAM,SAACC,GAAD,OAAWZ,EAAaY,OA/BwC,EAqC7CV,oBAAS,GArCoC,mBAqCxE4D,EArCwE,KAqC7DC,EArC6D,KA4C/E,OACI,sBAAKzG,UAAU,0BAAf,UACI,cAACsC,EAAD,CAAYE,aAAcA,EAAcC,aAlC3B,SAACL,GAClB,IAAMsE,EAAU,CAAC7F,IAAKuB,EAAKvB,IAAKC,IAAKsB,EAAKtB,IAAKmF,SAAS,GACxDG,EAAQ,2BAAID,GAASO,OAiCjB,qBAAK1G,UAAU,sBAAsBqC,QARrB,WACpBoE,GAAa,IAOT,SACKD,EAAa,cAACrB,EAAD,CAAWC,YA9BjB,SAAC5D,GACjB0E,EAAO,2BAAIzE,GAAL,IAAUR,GAAIO,EAAMyE,SAAS,MA6BwBnC,MAAOrC,EAAIR,KAC1D,qBAAKjB,UAAU,sCAAf,8BC/CL,SAAS2G,EAAT,GAAwC,IAAhBnE,EAAe,EAAfA,aAAe,EAEpBI,oBAAS,GAFW,mBAE7CgE,EAF6C,KAEnCC,EAFmC,OAGZjE,mBAAS,IAHG,mBAG7C4B,EAH6C,KAG/BsC,EAH+B,OAI1BlE,oBAAS,GAJiB,mBAI7CoB,EAJ6C,KAItC+C,EAJsC,OAKpBnE,mBAAS,IALW,mBAK7C0B,EAL6C,KAKnC0C,EALmC,KAqB9CtE,EAAe,SAACN,GACpByE,GAAY,GACZG,EAAY5E,EAAK6E,UAInB,OACE,oBAAIjH,UAAU,iBAAd,SACE,sBAAKA,UAAU,WAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgCwC,EAvBpB,kBACD,oCAwBVA,EAAe,cAACF,EAAD,CAAYC,aAtBb,SAACH,GACpByE,GAAY,GACZC,EAAgB1E,EAAK8E,QAoBuC1E,aAAcA,EAAcE,aAAcA,IAClF,cAACqD,EAAD,CAAgBvD,aAAcA,EAAcwD,YAlB9C,SAAC5D,GACnByE,GAAY,GACZC,EAAgB,GAAD,mBAAKtC,GAAL,CAAmBpC,KAClC2E,GAAS,IAeiFrE,aAAcA,IAGlGkE,EACW,cAACrC,EAAD,CAAaC,aAAcA,EAAcF,SAAUA,EAAUN,MAAOA,IADpE,cAAC/D,EAAD,SCjBNkH,MAtBf,WAEE,OAEE,qBAAKnH,UAAU,YAAf,SACE,sBAAMA,UAAU,eAAhB,SACE,sBAAKA,UAAU,uBAAf,UACE,cAACD,EAAD,IACA,qBAAIC,UAAU,YAAd,UACE,cAAC2G,EAAD,CAAcnE,cAAc,IAC5B,cAACmE,EAAD,CAAcnE,cAAc,OAE9B,wBAAQxC,UAAU,mBAAlB,wGCJKoH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlE,MAAK,YAAkD,IAA/CmE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.4fc48a7d.chunk.js","sourcesContent":["export default function Header () {\n    return (\n        <header>\n            <h1 className='weather-card-title'>\n            <span className='weather-card-title-up'>Weather</span>\n            <span className='weather-card-title-down'>forecast</span>\n            </h1>\n        </header>\n    )\n}","export default function ForecastEmptyMes () {\n    return (\n        <div className='forecast-empty-wrapper'>\n            <div className='forecast-empty-message'>Fill in all the fields and the weather will be displayed</div>\n        </div>\n    )\n}","\n\nexport default class ApiBase {\n    constructor () {\n        this.data = [\n            {\n              name: 'Samara',\n              lat: '53.195873',\n              lon: '50.100193',\n              id: 1\n            },\n            {\n              name: 'Tolyatty',\n              lat: '53.507836',\n              lon: '49.420393',\n              id: 2\n            },\n            {\n              name: 'Saratov',\n              lat: '51.533557',\n              lon: '46.034257',\n              id: 3\n            },\n            {\n              name: 'Cazan',\n              lat: '55.796127',\n              lon: '49.106405',\n              id: 4\n            },\n            {\n              name: 'Krasnodar',\n              lat: '45.035470',\n              lon: '38.975313',\n              id: 5\n            },\n          ];\n\n          this._apiBase = 'https://api.openweathermap.org/data/2.5/onecall';\n          this.apiKey = '662448886311aa69f48eddf74c980114';\n\n\n    }\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if(!res.ok) {\n            throw new Error('Something gone wrong');\n        }\n        return await res.json();\n    }\n    \n\n    getWeekWeather = async ({lat, lon}) => {\n        const res = await this.getResource(`?lat=${lat}&lon=${lon}&units=metric&exclude=alerts,hourly,current&appid=${this.apiKey}`);\n        return res;\n        \n    }\n\n    getDayWeather = async ({lat, lon, dt}) => {\n      console.log(lat, lon, dt);\n      const res = await this.getResource(`/timemachine?lat=${lat}&lon=${lon}&dt=${Date.parse(dt)}&appid=${this.apiKey}`);\n      return res;\n    }\n\n\n    getDay = (unix_timestamp) => {\n      const m = [\"jan\",\"feb\",\"mar\",\"apr\",\"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\"];\n      const date = new Date(unix_timestamp * 1000);\n      const day = date.getDate();\n      const month = date.getMonth();\n      const year = date.getFullYear();\n\n      return `${day > 10 ? day : '0' + day} ${m[month]} ${year}`;   \n  } \n\n\n}","import React from 'react';\n\nexport default function CityItem ({item, onClick}) {\n    return (\n        <li className='select-list-item city-item' \n            onClick={() => onClick(item.id)}>\n                {item.name}    \n        </li>\n        \n    )\n}","import React, {useState} from 'react';\nimport ApiBase from '../service/Api';\nimport CityItem from './CityItem';\n\nexport default function SelectCity ({weekSelected, weekForecast, citySelected, errorMessage}) {\n    const apiBase = new ApiBase();\n\n    const data = apiBase.data;\n \n    const [inputValue, setInputValue] = useState('');\n    const [listOpen, setListOpen] = useState(false);\n\n    const onItemClick = (id) => {\n        const selectItem = data.find(item => item.id === id);\n\n        if(selectItem) {\n            setInputValue(() => selectItem.name);\n            setListOpen(() => false);\n            return apiBase.getWeekWeather(selectItem)\n                        .then(item => weekSelected(item))\n                        .catch((error) => errorMessage(error))\n                        \n        }\n    }\n\n    const getDayForecast = (id) => {\n        const selectItem = data.find(item => item.id === id);\n        \n        if(selectItem) {\n            setInputValue(() => selectItem.name);\n            setListOpen(() => false);\n            citySelected(selectItem);               \n        }\n\n\n    }\n\n\n    const items = data.map((item, index) => {\n        return <CityItem key={index} item={item} onClick={weekForecast ? onItemClick : getDayForecast}/>\n    });\n   \n    return (\n        <div className='select-city-wrapper'>\n\n            <input type='text' \n                    placeholder='Select city'\n                    autoComplete='off'\n                    className='forecast-select forecast-select-city'    \n                    name='city' \n                    value={inputValue} \n                    onClick={() => setListOpen(!listOpen)}\n\n            />\n\n            {listOpen && \n            <ul className='select-list select-city-list'>\n                {items}\n            </ul>}\n\n        </div>\n    )\n}","import React from 'react';\n\nexport default function WeatherCard ({item, isDay}) {\n   const {date, icon, temp} = item;\n   const nameClass = 'forecast-day-item';\n\n    return (\n        \n        <li className={isDay ? nameClass : 'forecast-week-item'}>\n            <div className='forecast-week-item-day'>{date}</div>\n            <div className='forecast-week-item-icon'>\n                <img src={icon} alt='weather icon'/>\n            </div>\n            <div className='forecast-week-item-temp'>{temp > 0 ? `+${temp}º` : `-${temp}º`}</div>\n        </li>\n    )\n\n}","export default function ErrorMessage ({errorMes}) {\n    return (\n        <div className='error-message'>{errorMes}</div>\n\n    )\n}","import React, { useState } from 'react';\nimport WeatherCard from './WeatherCard';\nimport ApiBase from '../service/Api';\nimport ErrorMessage from './ErrorMessage';\n\n\nexport default function WeatherList ({forecastList, errorMes, isDay}) {\n\n    const [i, setI] = useState(0);\n    const apiBase = new ApiBase();\n    \n\n    const itemTransform = (item) => {\n        \n        const date = apiBase.getDay(item.dt);\n        const temp = Math.floor(item.temp.day);\n        const icon = `http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`;\n        \n        return {\n            date: date,\n            temp: temp,\n            icon: icon\n        }\n    }\n\n\n    const changeItemNumPrev = () => {\n        i === 0 ? setI(i) : setI(i - 1)\n        \n    }\n\n    const changeItemNumNext = () => {  \n        i === forecastList.slice(i, i + 3).length + 1 ? setI(i) : setI(i + 1)\n    }\n\n    const itemDay = forecastList.map((item) => {\n        return <WeatherCard key={item.dt} item={item} isDay={isDay}/>\n    });\n    \n    const items = forecastList.slice(i, i + 3).map((item) => {\n        const newItem = itemTransform(item);\n        return <WeatherCard key={item.dt} item={newItem} isDay={isDay}/>\n    });\n\n    return (\n        <div className='forecast-week-list-wrapper'>\n            {errorMes ? <ErrorMessage errorMes={errorMes}/> : \n                <>   \n                <button type='button' className='forecast-week-list-btn prev_btn' onClick={() => changeItemNumPrev()}></button>\n                <ul className='forecast-week-list'>\n                    {isDay ? itemDay : items}\n                </ul>\n                <button type='button' className='forecast-week-list-btn next_btn' onClick={() => changeItemNumNext()}></button>\n                </>\n            }\n            \n        </div>\n    )\n\n}","import React from 'react';\n\nexport default function SelectDay ({daySelected, value}) {\n  // не срабатывает max/min у input, хотя формат дат у элемента отображается правильно\n  \n  const getTransformDate = (unix_timestamp) => {\n    const date = new Date(unix_timestamp);\n      const day = date.getDate();\n      const month = date.getMonth() + 1;\n      const year = date.getFullYear();\n\n      return `${year}-${month > 10 ? month : '0' + month}-${day > 10 ? day : '0' + day} `;\n  }\n\n  const d = new Date();\n\n  const max_d = getTransformDate(d.setDate(d.getDate() - 1));\n  const min_d = getTransformDate(d.setDate(d.getDate() - 5));\n\n  return (\n    \n      <input type='date'\n            onChange={(e) => daySelected(e.target.value)}\n            className='forecast-select forecast-select-day active'\n            value={value}\n            name='date'\n            placeholder='Select date'\n            max={max_d}\n            min={min_d}\n      />\n\n    \n  )\n}","import React, {useEffect, useState} from 'react';\nimport ApiBase from '../service/Api';\nimport SelectCity from './SelectCity';\nimport SelectDay from './SelectDay';\n\nexport default function ForecastForDay ({weekForecast, dayForecast, errorMessage}) {\n    const apiBase = new ApiBase();\n\n    const [day, setDay] = useState({dt: '', isEmpty: true});\n    const [city, setCity] = useState({lat: '', lon: '', isEmpty: true});\n\n    useEffect(() => {\n        if(!day.isEmpty && !city.isEmpty) {\n            handleSubmit();\n        }\n    })\n\n    const citySelected = (item) => {\n        const newCity = {lat: item.lat, lon: item.lon, isEmpty: false};\n        setCity({...city, ...newCity});\n        \n    }\n\n    const daySelected = (date) => {\n        setDay({...day, dt: date, isEmpty: false});\n        \n    }\n\n \n    const handleSubmit = () => {\n        \n        apiBase.getDayWeather({...city, ...day})\n            .then((item) => dayForecast({date: apiBase.getDay(item.current.dt), \n                                icon: `http://openweathermap.org/img/wn/${item.current.weather[0].icon}@2x.png`,\n                                temp: Math.floor(item.current.temp)\n                            }))\n            .catch((error) => errorMessage(error))  \n        \n\n    }\n     \n    \n    const [inputDate, setInputDate] = useState(false);\n\n    const changeInputDate = () => {\n        setInputDate(true);\n    }\n\n    \n    return (\n        <div className='forecast-select-wrapper'>\n            <SelectCity weekForecast={weekForecast} citySelected={citySelected}/>\n            <div className='select-date-wrapper' onClick={changeInputDate}>\n                {inputDate ?  <SelectDay daySelected={daySelected} value={day.dt}/> : \n                    <div className='forecast-select forecast-select-day'>Select date</div>    \n                } \n            </div>\n              \n        </div>\n    )\n}","import React, {useState} from 'react';\nimport ForecastEmptyMes from './ForecastEmptyMes';\nimport SelectCity from './SelectCity';\nimport WeatherList from './WeatherList';\nimport WeatherCard from './WeatherCard';\nimport ForecastForDay from './ForecastForDay';\n\nexport default function ForecastCard ({weekForecast}) {\n\n  const [isSelect, setIsSelect] = useState(false);\n  const [forecastList, setForecastList] = useState([]);\n  const [isDay, setIsDay] = useState(false);\n  const [errorMes, setErrorMes] = useState('');\n  \n  const weekTitle = '7 Days Forecast',\n        dayTitle = 'Forecast for a Date in the Past';\n\n  const weekSelected = (item) => {\n    setIsSelect(true);\n    setForecastList(item.daily);\n  }\n\n  const dayForecast = (item) => {\n    setIsSelect(true);\n    setForecastList([...forecastList, item]);\n    setIsDay(true);\n  } \n\n  const errorMessage = (item) => {\n    setIsSelect(true);\n    setErrorMes(item.message);\n  }\n\n  \n  return (\n    <li className='card-list-item'>\n      <div className='forecast'>\n        <h2 className='forecast-title'>{weekForecast ? weekTitle : dayTitle}</h2>\n\n        {weekForecast ? <SelectCity weekSelected={weekSelected} weekForecast={weekForecast} errorMessage={errorMessage}/> \n                      : <ForecastForDay weekForecast={weekForecast} dayForecast={dayForecast} errorMessage={errorMessage}/>\n        }\n\n        {!isSelect ? <ForecastEmptyMes/> : \n                     <WeatherList forecastList={forecastList} errorMes={errorMes} isDay={isDay}/>\n        }\n\n      </div>\n    </li>\n  )\n}","import './App.css';\nimport Header from './components/Header';\nimport ForecastCard from './components/ForecastCard';\n\nfunction App() {\n\n  return (\n    \n    <div className='container'>\n      <main className='weather-card'>\n        <div className='weather-card-wrapper'>\n          <Header/>\n          <ul className='card-list'>\n            <ForecastCard weekForecast={true}/>\n            <ForecastCard weekForecast={false}/>\n          </ul>\n          <footer className='footer-copyright'>С любовью от mercury development</footer>\n        </div>    \n      </main>\n      \n    </div>\n    \n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}